@model FashionModeling.Models.JobRegisterWithRole
@{
    ViewBag.Title = "Add Job";
    ViewBag.Page = "Job";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Title
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action(ViewBag.Page,"Admin")"><i class="fa fa-dashboard"></i> @ViewBag.Page</a></li>
            <li class="active">@ViewBag.Title </li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm())
                {
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">@ViewBag.Title</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.JobTitle)
                                    @Html.HiddenFor(model => model.ShootingAddressId)
                                    @Html.HiddenFor(model => model.ContactNumbers)
                                    @Html.HiddenFor(model => model.ContactEmail)
                                    @Html.HiddenFor(model => model.CastingFromDateUtc)
                                    @Html.HiddenFor(model => model.CastingToDateUtc)
                                    @Html.HiddenFor(model => model.CastingExpiryDateUtc)
                                    @Html.HiddenFor(model => model.Description)
                                    @Html.HiddenFor(model => model.NumberOfRoles)
                                    @Html.HiddenFor(model => model.ShootingDateUTC)
                                    <div class="form-horizontal">

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        @for (var i = 0; i < Model.JobRoles.Count; i++)
                                        {
                                            <fieldset>
                                                <legend>Role @(i + 1)</legend>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.JobRoles[i].RoleName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].RoleName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].Professions, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.ListBoxFor(model => model.JobRoles[i].Professions, Model.JobRoles[i].ProfessionList, htmlAttributes: new { @class = "form-control chosen" })
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].Professions, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].AgeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.JobRoles[i].AgeFrom, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].AgeFrom, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].AgeTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.JobRoles[i].AgeTo, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].AgeTo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @foreach (var item in Model.JobRoles[i].GenderList)
                                                        {
                                                            @Html.RadioButtonFor(model => model.JobRoles[i].Gender, item.Value, htmlAttributes: new
                                                            {@*@class = "form-control"*@})
                                                            @Html.Label(item.Text)
                                                        }
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].Gender, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelForRequired(model => model.JobRoles[i].BasedIn, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.ListBoxFor(model => model.JobRoles[i].BasedIn, Model.JobRoles[i].CountryList, htmlAttributes: new { @class = "form-control chosen" })
                                                        @Html.ValidationMessageFor(model => model.JobRoles[i].BasedIn, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </fieldset>
                                        }
                                    </div>
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- ./box-body -->
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-sm-3 col-xs-6">
                                    <button type="submit" name="Save" class="btn btn-default"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
                                    <!-- /.description-block -->
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>

                        <!-- /.box-footer -->
                    </div>
                    <!-- /.box -->
                }
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(function () {
            $(".chosen").chosen();

        });
    </script>
}
