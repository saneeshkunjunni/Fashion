@model FashionModeling.Models.JobRegisterModel

@{
    ViewBag.Title = "Add Job";
    ViewBag.Page = "Job";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Title
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action(ViewBag.Page,"Admin")"><i class="fa fa-dashboard"></i> @ViewBag.Page</a></li>
            <li class="active">@ViewBag.Title </li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("AddJob", "Admin", FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
                {
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">@ViewBag.Title</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.ShootingAddressId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.ShootingAddressId, Model.AddressList, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ShootingAddressId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.ShootingDateUTC, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ShootingDateUTC, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ShootingDateUTC, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.ContactNumbers, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ContactNumbers, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ContactNumbers, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.CastingFromDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CastingFromDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CastingFromDateUtc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.CastingToDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CastingToDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CastingToDateUtc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.CastingExpiryDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CastingExpiryDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CastingExpiryDateUtc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.NumberOfRoles, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.NumberOfRoles, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.NumberOfRoles, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10"> 
                                                @Html.HiddenFor(model => model.Url)
                                                <p><a href="#" id="hl-start-upload">Start Upload</a></p>

                                                <div id="crop-image-area" style="display:none;">
                                                    <p><a href="#" id="hl-crop-image">Crop Image</a></p>
                                                    <p><img id="uploaded-image" src="#" /></p>
                                                    <p><img id="my-cropped-image" src="#" style="display:none;" /></p>
                                                    <p><input type="submit" value="Submit" id="btn-my-submit" style="display: none;" /></p>
                                                </div>
                                                @Html.TextBoxFor(model => model.ImageFile, htmlAttributes: new { @class = "form-control", @type = "file" })
                                                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelForRequired(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- ./box-body -->
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-sm-3 col-xs-6">
                                    <button type="submit" name="Save" class="btn btn-default"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
                                    <!-- /.description-block -->
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>

                        <!-- /.box-footer -->
                    </div>
                    <!-- /.box -->
                }
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#ShootingDateUTC').datetimepicker({
            format: 'DD/MM/YYYY',
        });
        $('#CastingFromDateUtc').datetimepicker({
            format: 'DD/MM/YYYY',
        });
        $('#CastingToDateUtc').datetimepicker({
            format: 'DD/MM/YYYY',
        });
        $('#CastingExpiryDateUtc').datetimepicker({
            format: 'DD/MM/YYYY',
        });
    </script>
    <script type="text/javascript">

        //************************************** JavaScript for ajax file upload **************************************
        var jqXHRData;

        $(document).ready(function () {

            'use strict';

            $('#ImageFile').fileupload({
                url: '/Admin/JobImage',
                dataType: 'json',
                add: function (e, data) {
                    jqXHRData = data;
                },
                done: function (event, data) {
                    if (data.result.isUploaded) {

                        $("#Url").val(data.result.filePath);

                        destroyCrop();

                        $("#uploaded-image").attr("src", data.result.filePath + "?t=" + new Date().getTime());

                        initCrop();

                        $("#crop-image-area").fadeIn("slow");
                    } else {

                    }
                },
                fail: function (event, data) {
                    if (data.files[0].error) {
                        alert(data.files[0].error);
                    }
                }
            });
        });

        $("#hl-start-upload").on('click', function () {
            if (jqXHRData) {
                jqXHRData.submit();
            }
            return false;
        });
        //************************************** JavaScript for ajax file upload END **************************************




        //************************************** JavaScript for cropping of image *****************************************
        var imageCropWidth = 0;
        var imageCropHeight = 0;
        var cropPointX = 0;
        var cropPointY = 0;

        $("#hl-crop-image").on("click", function (e) {
            e.preventDefault();
            cropImage();
        });

        function initCrop() {
            $('#uploaded-image').Jcrop({
                onChange: setCoordsAndImgSize,
                aspectRatio: 1
            });
        }

        function destroyCrop() {
            var jcropApi = $('#uploaded-image').data('Jcrop');

            if (jcropApi !== undefined) {
                jcropApi.destroy();
                $('#uploaded-image').attr('style', "").attr("src", "");
            }
        }

        function setCoordsAndImgSize(e) {

            imageCropWidth = e.w;
            imageCropHeight = e.h;

            cropPointX = e.x;
            cropPointY = e.y;
        }

        function cropImage() {

            if (imageCropWidth == 0 && imageCropHeight == 0) {
                alert("Please select crop area.");
                return;
            }

            $.ajax({
                url: '/Image/CropImage',
                type: 'POST',
                data: {
                    imagePath: $("#Url").val(),
                    cropPointX: cropPointX,
                    cropPointY: cropPointY,
                    imageCropWidth: imageCropWidth,
                    imageCropHeight: imageCropHeight
                },
                success: function (data) {

                    $("#hf-cropped-image-path").val(data.photoPath);

                    $("#my-cropped-image")
                        .attr("src", data.photoPath + "?t=" + new Date().getTime())
                        .show();

                    $("#btn-my-submit").fadeIn("slow");
                },
                error: function (data) { }
            });
        }

            //************************************** JavaScript for cropping of image END **************************************

    </script>

}
